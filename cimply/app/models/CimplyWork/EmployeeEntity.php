<?php
//------------------------------------------------------------------------------
// <generated-code>
//    This code generated by IEntity-Generator
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </generated-code>
//------------------------------------------------------------------------------

namespace Cimply\App\Models\CimplyWork
{
    use \Cimply\Core\Model\EntityBase;
    use \Cimply\Interfaces\IBasics;

    abstract class EmployeeModel extends EntityBase implements IBasics
    {
        protected $EmployeeID;
        protected $FirstName;
        protected $LastName;
        protected $EmpCode;
        protected $Position;
        protected $Office;
        protected $EMail;
        
        //Storage-Data
        function storageData(): object {
            return (object)[
                'EmployeeID' => (int)$this->EmployeeID, 'FirstName' => (string)$this->FirstName, 'LastName' => (string)$this->LastName, 'EmpCode' => (string)$this->EmpCode, 'Position' => (string)$this->Position, 'Office' => (string)$this->Office, 'EMail' => (string)$this->EMail
            ];
        }

        //Storage-Data
        function identKeyValue($name = null): ?array {
            $result = [
                'EmployeeID' => ['EmployeeID = :EmployeeID' => (int)$this->EmployeeID], 'EMail' => ['EMail = :EMail' => (string)$this->EMail]
            ];
            return $result[$name] ?? end($result);
        }

    }

    class EmployeeEntity extends EmployeeModel
    {
        public $table = 'Employee';

        //Constructor
        public function __construct($Model = null) {
            if(!(is_array($Model))) {
                $value = $Model;
            } else {
                $value = \Lists::ObjectList($Model);
            }

            
            isset($value->EmployeeID) ? settype($value->EmployeeID, 'int') ? $this->EmployeeID = $value->EmployeeID : $this->infoMessage['EmployeeID'] = 'wrong datatype "int"' : null;
            isset($value->FirstName) ? settype($value->FirstName, 'string') ? $this->FirstName = $value->FirstName : $this->infoMessage['FirstName'] = 'wrong datatype "string"' : null;
            isset($value->LastName) ? settype($value->LastName, 'string') ? $this->LastName = $value->LastName : $this->infoMessage['LastName'] = 'wrong datatype "string"' : null;
            isset($value->EmpCode) ? settype($value->EmpCode, 'string') ? $this->EmpCode = $value->EmpCode : $this->infoMessage['EmpCode'] = 'wrong datatype "string"' : null;
            isset($value->Position) ? settype($value->Position, 'string') ? $this->Position = $value->Position : $this->infoMessage['Position'] = 'wrong datatype "string"' : null;
            isset($value->Office) ? settype($value->Office, 'string') ? $this->Office = $value->Office : $this->infoMessage['Office'] = 'wrong datatype "string"' : null;
            isset($value->EMail) ? settype($value->EMail, 'string') ? $this->EMail = $value->EMail : $this->infoMessage['EMail'] = 'wrong datatype "string"' : null;

            (count($value->infoMessage) >= 1) ? $this->saveAble = false : (isset($value->message)) ? $this->infoMessage['success'] = $value->message : null;
            
            }
        }

        static function Cast($mainObject, $selfObject = self::class):parent {
            return static::Cast($mainObject, $selfObject = self::class);
        }

        public function CalculateStorable() {
            return $this->saveAble;
        }

        public function Epilogue() {
            return false;
        }

        public function Prologue() {
            return false;
        }

        function Execute() {
            return $this;
        }

    }
}