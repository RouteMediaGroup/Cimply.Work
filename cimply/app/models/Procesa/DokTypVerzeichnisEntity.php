<?php
//------------------------------------------------------------------------------
// <generated-code>
//    This code generated by IEntity-Generator
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </generated-code>
//------------------------------------------------------------------------------

namespace Cimply\App\Models\Procesa
{
    use \Cimply\Core\Model\EntityBase;
    use \Cimply\Interfaces\IBasics;

    abstract class DoktypverzeichnisModel extends EntityBase implements IBasics
    {
        protected $DokId; protected $DokTypKennung; protected $DokTypBezeichnung; protected $DokTypScript; protected $Sparte;

        //Storage-Data
        function storageData(): object {
            return (object)[
                'DokId' => (int)$this->DokId, 'DokTypKennung' => (string)$this->DokTypKennung, 'DokTypBezeichnung' => (string)$this->DokTypBezeichnung, 'DokTypScript' => (string)$this->DokTypScript, 'Sparte' => (string)$this->Sparte
            ];
        }

        //Storage-Data
        function identKeyValue($name = null): ?array {
            $result = [
                'DokId' => ['DokId = :DokId' => (int)$this->DokId]
            ];
            return $result[$name] ?? end($result);
        }

    }

    class DoktypverzeichnisEntity extends DoktypverzeichnisModel
    {
        public $table = 'DokTypVerzeichnis';

        //Constructor
        public function __construct($Model = null) {
            if(!(is_array($Model))) {
                $value = $Model;
            } else {
                $value = \Lists::ObjectList($Model);
            }
            if(isset($value->message)) {
                $this->infoMessage = $value->message;
            }

            isset($value->DokId) ? settype($value->DokId, 'int') ? $this->DokId = $value->DokId : $this->infoMessage['DokId'] = 'wrong datatype "int"' : null;
            isset($value->DokTypKennung) ? settype($value->DokTypKennung, 'string') ? $this->DokTypKennung = $value->DokTypKennung : $this->infoMessage['DokTypKennung'] = 'wrong datatype "string"' : null;
            isset($value->DokTypBezeichnung) ? settype($value->DokTypBezeichnung, 'string') ? $this->DokTypBezeichnung = $value->DokTypBezeichnung : $this->infoMessage['DokTypBezeichnung'] = 'wrong datatype "string"' : null;
            isset($value->DokTypScript) ? settype($value->DokTypScript, 'string') ? $this->DokTypScript = $value->DokTypScript : $this->infoMessage['DokTypScript'] = 'wrong datatype "string"' : null;
            isset($value->Sparte) ? settype($value->Sparte, 'string') ? $this->Sparte = $value->Sparte : $this->infoMessage['Sparte'] = 'wrong datatype "string"' : null;
        }

        static function Cast($mainObject, $selfObject = self::class):parent {
            return static::Cast($mainObject, $selfObject = self::class);
        }

        public function CalculateStorable() {
            return $this->saveAble;
        }

        public function Epilogue() {
            return false;
        }

        public function Prologue() {
            return false;
        }

        function Execute() {
            return $this;
        }

    }
}